//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace SysproConnector.SysproQueryService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="queryclassSoap", Namespace="http://www.syspro.com/ns/query/")]
    public partial class queryclass : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BrowseOperationCompleted;
        
        private System.Threading.SendOrPostCallback FetchOperationCompleted;
        
        private System.Threading.SendOrPostCallback QueryOperationCompleted;
        
        private System.Threading.SendOrPostCallback NextKeyOperationCompleted;
        
        private System.Threading.SendOrPostCallback PreviousKeyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public queryclass() {
            this.Url = global::SysproConnector.Properties.Settings.Default.SysproConnector_SysproQueryService_queryclass;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BrowseCompletedEventHandler BrowseCompleted;
        
        /// <remarks/>
        public event FetchCompletedEventHandler FetchCompleted;
        
        /// <remarks/>
        public event QueryCompletedEventHandler QueryCompleted;
        
        /// <remarks/>
        public event NextKeyCompletedEventHandler NextKeyCompleted;
        
        /// <remarks/>
        public event PreviousKeyCompletedEventHandler PreviousKeyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.syspro.com/ns/query/Browse", RequestNamespace="http://www.syspro.com/ns/query/", ResponseNamespace="http://www.syspro.com/ns/query/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Browse(string UserId, string XMLIn) {
            object[] results = this.Invoke("Browse", new object[] {
                        UserId,
                        XMLIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void BrowseAsync(string UserId, string XMLIn) {
            this.BrowseAsync(UserId, XMLIn, null);
        }
        
        /// <remarks/>
        public void BrowseAsync(string UserId, string XMLIn, object userState) {
            if ((this.BrowseOperationCompleted == null)) {
                this.BrowseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBrowseOperationCompleted);
            }
            this.InvokeAsync("Browse", new object[] {
                        UserId,
                        XMLIn}, this.BrowseOperationCompleted, userState);
        }
        
        private void OnBrowseOperationCompleted(object arg) {
            if ((this.BrowseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BrowseCompleted(this, new BrowseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.syspro.com/ns/query/Fetch", RequestNamespace="http://www.syspro.com/ns/query/", ResponseNamespace="http://www.syspro.com/ns/query/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Fetch(string UserId, string XMLIn) {
            object[] results = this.Invoke("Fetch", new object[] {
                        UserId,
                        XMLIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FetchAsync(string UserId, string XMLIn) {
            this.FetchAsync(UserId, XMLIn, null);
        }
        
        /// <remarks/>
        public void FetchAsync(string UserId, string XMLIn, object userState) {
            if ((this.FetchOperationCompleted == null)) {
                this.FetchOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFetchOperationCompleted);
            }
            this.InvokeAsync("Fetch", new object[] {
                        UserId,
                        XMLIn}, this.FetchOperationCompleted, userState);
        }
        
        private void OnFetchOperationCompleted(object arg) {
            if ((this.FetchCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FetchCompleted(this, new FetchCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.syspro.com/ns/query/Query", RequestNamespace="http://www.syspro.com/ns/query/", ResponseNamespace="http://www.syspro.com/ns/query/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Query(string UserId, string BusinessObject, string XMLIn) {
            object[] results = this.Invoke("Query", new object[] {
                        UserId,
                        BusinessObject,
                        XMLIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void QueryAsync(string UserId, string BusinessObject, string XMLIn) {
            this.QueryAsync(UserId, BusinessObject, XMLIn, null);
        }
        
        /// <remarks/>
        public void QueryAsync(string UserId, string BusinessObject, string XMLIn, object userState) {
            if ((this.QueryOperationCompleted == null)) {
                this.QueryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQueryOperationCompleted);
            }
            this.InvokeAsync("Query", new object[] {
                        UserId,
                        BusinessObject,
                        XMLIn}, this.QueryOperationCompleted, userState);
        }
        
        private void OnQueryOperationCompleted(object arg) {
            if ((this.QueryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QueryCompleted(this, new QueryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.syspro.com/ns/query/NextKey", RequestNamespace="http://www.syspro.com/ns/query/", ResponseNamespace="http://www.syspro.com/ns/query/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string NextKey(string UserId, string XMLIn) {
            object[] results = this.Invoke("NextKey", new object[] {
                        UserId,
                        XMLIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void NextKeyAsync(string UserId, string XMLIn) {
            this.NextKeyAsync(UserId, XMLIn, null);
        }
        
        /// <remarks/>
        public void NextKeyAsync(string UserId, string XMLIn, object userState) {
            if ((this.NextKeyOperationCompleted == null)) {
                this.NextKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnNextKeyOperationCompleted);
            }
            this.InvokeAsync("NextKey", new object[] {
                        UserId,
                        XMLIn}, this.NextKeyOperationCompleted, userState);
        }
        
        private void OnNextKeyOperationCompleted(object arg) {
            if ((this.NextKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.NextKeyCompleted(this, new NextKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.syspro.com/ns/query/PreviousKey", RequestNamespace="http://www.syspro.com/ns/query/", ResponseNamespace="http://www.syspro.com/ns/query/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string PreviousKey(string UserId, string XMLIn) {
            object[] results = this.Invoke("PreviousKey", new object[] {
                        UserId,
                        XMLIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void PreviousKeyAsync(string UserId, string XMLIn) {
            this.PreviousKeyAsync(UserId, XMLIn, null);
        }
        
        /// <remarks/>
        public void PreviousKeyAsync(string UserId, string XMLIn, object userState) {
            if ((this.PreviousKeyOperationCompleted == null)) {
                this.PreviousKeyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPreviousKeyOperationCompleted);
            }
            this.InvokeAsync("PreviousKey", new object[] {
                        UserId,
                        XMLIn}, this.PreviousKeyOperationCompleted, userState);
        }
        
        private void OnPreviousKeyOperationCompleted(object arg) {
            if ((this.PreviousKeyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PreviousKeyCompleted(this, new PreviousKeyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void BrowseCompletedEventHandler(object sender, BrowseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BrowseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal BrowseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void FetchCompletedEventHandler(object sender, FetchCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FetchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FetchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void QueryCompletedEventHandler(object sender, QueryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QueryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal QueryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void NextKeyCompletedEventHandler(object sender, NextKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class NextKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal NextKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void PreviousKeyCompletedEventHandler(object sender, PreviousKeyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PreviousKeyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PreviousKeyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591