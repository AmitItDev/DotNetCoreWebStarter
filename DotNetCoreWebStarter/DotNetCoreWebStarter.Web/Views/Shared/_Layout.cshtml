@using DotNetCoreWebStarter.Common
@using DotNetCoreWebStarter.Core.Entities
@using DotNetCoreWebStarter.Core.Interfaces
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Authentication.Cookies
@using Microsoft.AspNetCore.Identity
@inject IHttpContextAccessor HttpContextAccessor
@inject IMenuService MenuService
@inject UserManager<ApplicationUser> UserManager

@{
    var user = User.Identity!.Name != null
               ? await UserManager.FindByNameAsync(User.Identity.Name)
               : null;
    var menus = user != null
                ? await MenuService.GetMenusForUserAsync(user)
                : new List<MenuItem>();
    var currentPath = Context.Request.Path.ToString().ToLowerInvariant();
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <title>@ViewData["Title"] - Starter Pack</title>

    <!-- Tailwind -->
    <script src="~/js/tailwind_v3417.js"></script>

    <!-- jQuery -->
    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <!-- Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" integrity="sha512-..." crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="stylesheet" href="~/toast-master/css/jquery.toast.css" />
    <link rel="stylesheet" href="~/sweetalert/sweetalert.css" />
    <script src="~/toast-master/js/jquery.toast.js"></script>
    <script src="~/js/common.js" ></script>
    <script src="~/sweetalert/sweetalert.min.js"></script>

    <!-- Custom JS for toggle -->
    <script>
        $(document).ready(function () {
          // Initialize sidebar state from localStorage
          const sidebarState = localStorage.getItem('sidebarState');
          if (sidebarState === 'collapsed') {
              $('#sidebar').removeClass('w-56').addClass('w-16');
              $('.sidebar-label').addClass('hidden');
              $('#logoFull').addClass('hidden');
              $('#logoMini').removeClass('hidden');
          }

          $('#sidebarToggle').on('click', function () {
              $('#sidebar').toggleClass('w-56').toggleClass('w-16');

              const isCollapsed = $('#sidebar').hasClass('w-16');

              // Update visibility of labels and logos
              if (isCollapsed) {
                  $('.sidebar-label').addClass('hidden');
                  $('#logoFull').addClass('hidden');
                  $('#logoMini').removeClass('hidden');

                  // Save state
                  localStorage.setItem('sidebarState', 'collapsed');
              } else {
                  $('.sidebar-label').removeClass('hidden');
                  $('#logoFull').removeClass('hidden');
                  $('#logoMini').addClass('hidden');

                  // Save state
                  localStorage.setItem('sidebarState', 'expanded');
              }


           });

          $('a[data-toggle]').on('click', function (e) {
             const targetId = $(this).data('toggle');
             const submenu = $('#' + targetId);
             const icon = $(this).find('i.fas.fa-chevron-down');

             // Only toggle if submenu exists
             if (submenu.length) {
                 e.preventDefault(); // prevent navigation if submenu exists
                 submenu.toggleClass('hidden');
                 icon.toggleClass('rotate-180'); // optional animation
             }
         });

       });
    </script>
</head>

<body class="bg-gray-100">
    <div class="flex h-screen">
        <!-- Sidebar -->
        <div id="sidebar" class="bg-gray-800 text-white h-full w-56 space-y-6 py-1 transition-all duration-300 ease-in-out overflow-hidden">
            <!-- Logo Section -->
            <div class="flex items-center justify-center h-16">
                <!-- Full Logo (Text or Image) -->
                <div class="sidebar-logo-full text-xl font-bold tracking-wide" id="logoFull">
                    <img src="~/images/logo-design.png" class="h-14" />
                </div>

                <!-- Mini Logo -->
                <div class="sidebar-logo-mini text-2xl font-extrabold hidden" id="logoMini">
                    CL
                </div>
            </div>

            <!-- Dashboard (always visible) -->
            @{
                var isParentActiveD = currentPath.StartsWith("/home" ?? "") || currentPath.Equals("/" ?? "");
                var parentClassD = isParentActiveD
                ? "bg-gray-700 font-semibold text-white"
                : "hover:bg-gray-700 text-gray-300";
            }
            <a href="/Home" class="flex items-center space-x-4 px-4 py-2.5 rounded hover:bg-gray-700 @parentClassD">
                <i class="fas fa-tachometer-alt w-6 text-center"></i>
               
                <span class="sidebar-label transition-opacity duration-200 ">Dashboard</span>
            </a>

            <!-- Dynamic Menus -->
            @foreach (var menu in menus.Where(m => m.ParentMenuId == null))
            {
                var isParentActive = currentPath.StartsWith(menu.Url?.ToLowerInvariant() ?? "")
            || menu.Children.Any(c => currentPath.StartsWith(c.Url?.ToLowerInvariant() ?? ""));
                var parentClass = isParentActive
                ? "bg-gray-700 font-semibold text-white"
                : "hover:bg-gray-700 text-gray-300";

                var submenuId = $"submenu-{menu.MenuId}";
                <div>
                    <!-- Parent Link -->
                    <a href="@menu.Url" currentPath="@currentPath" menu.Url="@menu.Url" class="flex items-center space-x-4 px-4 py-2.5 rounded transition-all duration-200 @parentClass"
                       data-toggle="@submenuId">
                        @if (!string.IsNullOrEmpty(menu.Icon))
                        {
                            <i class="@menu.Icon w-6 text-center"></i>
                        }
                        <span class="sidebar-label whitespace-nowrap">@menu.Title</span>

                        @if (menu.Children.Any())
                        {
                            <i class="fas fa-chevron-down ml-auto sidebar-label transition-transform duration-200"
                               id="chevron-@menu.MenuId"></i>
                        }
                    </a>

                    <!-- Submenu -->
                    @if (menu.Children.Any())
                    {
                        var isChildActive = menu.Children.Any(c => currentPath.StartsWith(c.Url?.ToLowerInvariant() ?? ""));
                        var submenuVisibility = isChildActive ? "" : "hidden";

                        <ul id="@submenuId" class="ml-6 mt-1 space-y-1 @submenuVisibility">
                            @foreach (var child in menu.Children)
                            {
                                isChildActive = currentPath.StartsWith(child.Url?.ToLowerInvariant() ?? "");
                                var childClass = isChildActive
                                ? "bg-gray-700 font-semibold text-white"
                                : "hover:bg-gray-700 text-gray-300";

                                <li>
                                    <a href="@child.Url" class="flex items-center px-4 py-2 rounded transition-all duration-150 @childClass">
                                        @if (!string.IsNullOrEmpty(child.Icon))
                                        {
                                            <i class="@child.Icon w-5 text-center"></i>
                                        }
                                        <span class="sidebar-label ml-2">@child.Title</span>
                                    </a>
                                </li>
                            }
                        </ul>
                    }
                </div>
            }
        </div>

        <!-- Main content -->
        <div id="mainContent" class="flex-1 flex flex-col min-w-0 transition-all duration-300 ease-in-out">
            <!-- Header -->
            <header class="flex justify-between items-center bg-white shadow px-6 py-4 border-b">
                <!-- Sidebar Toggle Button -->
                <button id="sidebarToggle" class="text-gray-700 focus:outline-none">
                    <!-- Hamburger Icon -->
                    <svg class="w-6 h-6" fill="none" stroke="currentColor" stroke-width="2" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                </button>

                <div class="font-bold text-xl">Starter Pack</div>
                <div class="flex items-center space-x-4">
                    <span class="text-gray-700">@User?.Identity?.Name</span>
                    <a href="/Account/Logout" class="text-[#00aeef] hover:underline">Logout</a>
                </div>
            </header>

            <!-- Page Content -->
            <main class="flex-1 overflow-y-auto">
                @RenderBody()
            </main>
        </div>
    </div>
</body>
@if(TempData["SuccessMessage"] != null)
    {
    <script>
        ShowMessage('@SystemEnum.MessageType.success.ToString()', '@(TempData["SuccessMessage"].ToString())');
    </script>
    }
    @if (TempData["WarningMessage"] != null)
    {
    <script>
        ShowMessage('@SystemEnum.MessageType.warning.ToString()', '@(TempData["WarningMessage"].ToString())');
    </script>
    }
    @if (TempData["ErrorMessage"] != null)
    {
    <script>
        ShowMessage('@SystemEnum.MessageType.error.ToString()', '@(TempData["ErrorMessage"].ToString())');
    </script>
 }
</html>
